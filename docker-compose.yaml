services:
  postgres:
    container_name: postgres_container_for_filmdb
    image: postgres:16.1-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=2GB"
      - "-c"
      - "effective_cache_size=8GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=1GB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=360s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "filmdb"
      POSTGRES_USER: "filmadmin"
      POSTGRES_PASSWORD: "mycoolpassword123"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./sql/migrate:/docker-entrypoint-initdb.d
      - filmdb-data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql.conf:ro
    ports:
      - "6432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U filmadmin -d filmdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 10G
    networks:
      - postgres
  pgadmin:
    container_name: pgadmin_container_for_filmdb
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "filmadmin@filmdb.com"
      PGADMIN_DEFAULT_PASSWORD: "filmadminpwd4filmdb"
      PGADMIN_CONFIG_SERVER_MODE: "False" # To allow running in desktop mode
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://filmadmin:mycoolpassword123@postgres:5432/filmdb
    depends_on:
      - postgres
    networks:
      - postgres
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - postgres
volumes:
  filmdb-data:
  pgadmin-data:
  uploaded-files:

networks:
  postgres:
    driver: bridge